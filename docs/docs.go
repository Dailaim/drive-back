// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Leonardo Iglesias",
            "email": "laiglesias.min@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ride": {
            "post": {
                "description": "Create Ride with DriverID and RiderID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ride"
                ],
                "summary": "Create Ride",
                "parameters": [
                    {
                        "description": "Create Ride",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rideDto.CreateRide"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rideDto.CreateRideResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rideDto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ride/{id}": {
            "put": {
                "description": "Update Ride with ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ride"
                ],
                "summary": "Update Ride",
                "parameters": [
                    {
                        "description": "Update Ride",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rideDto.UpdateRide"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rideDto.UpdateRideResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rideDto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transaction/id/{id}": {
            "get": {
                "description": "Get Transaction by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactionDto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/transactionDto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transaction/wompi/{id}": {
            "get": {
                "description": "Get Wompi Transaction by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Wompi Transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wompi Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transactionDto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/transactionDto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wompievent": {
            "post": {
                "description": "Wompi Event Hook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WompiEvent"
                ],
                "summary": "Wompi Event Hook",
                "parameters": [
                    {
                        "description": "Wompi Event",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/wompiEventDto.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wompiEventDto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rideDto.Card": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "rideDto.CreateRide": {
            "type": "object",
            "properties": {
                "driver_id": {
                    "type": "integer"
                },
                "rider_id": {
                    "type": "integer"
                }
            }
        },
        "rideDto.CreateRideResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rideDto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/rideDto.Message"
                }
            }
        },
        "rideDto.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "rideDto.Rider": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rideDto.Card"
                    }
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "rideDto.Transaction": {
            "type": "object",
            "properties": {
                "fare": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "status_message": {
                    "type": "string"
                }
            }
        },
        "rideDto.UpdateRide": {
            "type": "object",
            "properties": {
                "endLocation": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "startLocation": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rideDto.UpdateRideResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "rider": {
                    "$ref": "#/definitions/rideDto.Rider"
                },
                "status": {
                    "type": "string"
                },
                "transaction": {
                    "$ref": "#/definitions/rideDto.Transaction"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "transactionDto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/transactionDto.Message"
                }
            }
        },
        "transactionDto.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "transactionDto.TransactionResponse": {
            "type": "object",
            "properties": {
                "fare": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "wompiEventDto.Data": {
            "type": "object",
            "properties": {
                "transaction": {
                    "$ref": "#/definitions/wompiEventDto.Transaction"
                }
            }
        },
        "wompiEventDto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/wompiEventDto.Message"
                }
            }
        },
        "wompiEventDto.Event": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/wompiEventDto.Data"
                },
                "environment": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/definitions/wompiEventDto.Signature"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        },
        "wompiEventDto.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "wompiEventDto.Signature": {
            "type": "object",
            "properties": {
                "checksum": {
                    "type": "string"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "wompiEventDto.Transaction": {
            "type": "object",
            "properties": {
                "amount_in_cents": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "customer_email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_link_id": {
                    "type": "string"
                },
                "payment_method_type": {
                    "type": "string"
                },
                "payment_source_id": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "shipping_address": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Diver Back API",
	Description:      "The driver-back API description for swagger documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
